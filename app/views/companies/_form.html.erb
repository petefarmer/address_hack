<%= form_with(model: company, class: "bg-white shadow-lg rounded-lg max-w-4xl mx-auto") do |form| %>
  <div class="p-6 space-y-8">
    <% if company.errors.any? %>
      <div class="bg-red-50 border-l-4 border-red-400 p-4">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">
              <%= pluralize(company.errors.count, "error") %> prohibited this company from being saved:
            </h3>
            <div class="mt-2 text-sm text-red-700">
              <ul class="list-disc pl-5 space-y-1">
                <% company.errors.each do |error| %>
                  <li><%= error.full_message %></li>
                <% end %>
              </ul>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <!-- Company Information Section -->
    <div class="space-y-6">
      <h2 class="text-xl font-semibold text-gray-900 border-b pb-2">Company Information</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :name, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
          <%= form.text_field :name, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm", required: true %>
        </div>

        <div>
          <%= form.label :contact_person, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
          <%= form.text_field :contact_person, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm", required: true %>
        </div>

        <div>
          <%= form.label :email, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
          <%= form.email_field :email, 
              class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm",
              pattern: "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$",
              title: "Please enter a valid email address (e.g., user@example.com)",
              required: true %>
          <p class="mt-1 text-sm text-gray-500">Example: user@example.com</p>
        </div>

        <div>
          <%= form.label :phone, class: "block text-sm font-medium text-gray-700" %>
          <div class="mt-1 relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 flex items-center">
              <span class="h-full inline-flex items-center px-3 border-r border-gray-300 bg-gray-50 text-gray-500 sm:text-sm" id="phone-country-code">
                +1
              </span>
            </div>
            <%= form.telephone_field :phone, 
                class: "block w-full pl-16 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm",
                placeholder: "(555) 555-5555",
                pattern: "[0-9\(\)\-\.\s]+",
                title: "Please enter a valid phone number" %>
          </div>
          <p class="mt-1 text-sm text-gray-500">Optional - Format: (555) 555-5555</p>
        </div>
      </div>
    </div>

    <!-- Address Section -->
    <div class="space-y-6">
      <h2 class="text-xl font-semibold text-gray-900 border-b pb-2">Addresses</h2>
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <fieldset class="bg-gray-50 p-6 rounded-lg shadow-sm" id="billing-address">
          <legend class="text-lg font-medium text-gray-900 mb-4">Billing Address</legend>
          <%= form.fields_for :billing_address do |addr_form| %>
            <div class="space-y-4">
              <div>
                <%= addr_form.label :street, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
                <%= addr_form.text_field :street, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm billing-field", required: true %>
              </div>

              <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <div>
                  <%= addr_form.label :city, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
                  <%= addr_form.text_field :city, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm billing-field", required: true %>
                </div>

                <div>
                  <%= addr_form.label :state, class: "block text-sm font-medium text-gray-700" %>
                  <%= addr_form.text_field :state, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm billing-field" %>
                </div>
              </div>

              <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <div>
                  <%= addr_form.label :postal_code, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
                  <%= addr_form.text_field :postal_code, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm billing-field", required: true %>
                </div>

                <div>
                  <%= addr_form.label :country, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
                  <%= addr_form.select :country, country_options, { prompt: 'Select a country' }, { class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm billing-field", required: true } %>
                </div>
              </div>
            </div>
          <% end %>
        </fieldset>

        <div class="space-y-6">
          <div class="bg-white p-4 rounded-lg border border-gray-200 shadow-sm">
            <label class="inline-flex items-center cursor-pointer">
              <input type="checkbox" id="same-as-billing" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded">
              <span class="ml-2 text-sm font-medium text-gray-700">Shipping address same as billing</span>
            </label>
          </div>

          <fieldset class="bg-gray-50 p-6 rounded-lg shadow-sm transition-opacity duration-200" id="shipping-address">
            <legend class="text-lg font-medium text-gray-900 mb-4">Shipping Address</legend>
            <%= form.fields_for :shipping_address do |addr_form| %>
              <div class="space-y-4">
                <div>
                  <%= addr_form.label :street, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
                  <%= addr_form.text_field :street, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm shipping-field", required: true %>
                </div>

                <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                  <div>
                    <%= addr_form.label :city, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
                    <%= addr_form.text_field :city, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm shipping-field", required: true %>
                  </div>

                  <div>
                    <%= addr_form.label :state, class: "block text-sm font-medium text-gray-700" %>
                    <%= addr_form.text_field :state, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm shipping-field" %>
                  </div>
                </div>

                <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                  <div>
                    <%= addr_form.label :postal_code, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
                    <%= addr_form.text_field :postal_code, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm shipping-field", required: true %>
                  </div>

                  <div>
                    <%= addr_form.label :country, class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" %>
                    <%= addr_form.select :country, country_options, { prompt: 'Select a country' }, { class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm shipping-field", required: true } %>
                  </div>
                </div>
              </div>
            <% end %>
          </fieldset>
        </div>
      </div>
    </div>
  </div>

  <div class="px-6 py-4 bg-gray-50 border-t border-gray-200 flex items-center justify-between">
    <p class="text-sm text-gray-500">* Required fields</p>
    <%= form.submit class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors" %>
  </div>

  <%= javascript_tag do %>
    document.addEventListener('turbo:load', function() {
      const sameAsBillingCheckbox = document.getElementById('same-as-billing');
      const shippingFields = document.querySelectorAll('.shipping-field');
      const billingFields = document.querySelectorAll('.billing-field');
      const shippingAddress = document.getElementById('shipping-address');
      const phoneCountryCode = document.getElementById('phone-country-code');
      const phoneInput = document.querySelector('input[type="tel"]');

      // Country code mapping
      const countryCodes = {
        'US': '+1',
        'GB': '+44',
        'DE': '+49',
        'FR': '+33',
        'IT': '+39',
        'ES': '+34',
        'PT': '+351',
        'NL': '+31',
        'BE': '+32',
        'CH': '+41',
        'AT': '+43',
        'SE': '+46',
        'NO': '+47',
        'DK': '+45',
        'FI': '+358',
        'PL': '+48',
        'CZ': '+420',
        'GR': '+30',
        'RO': '+40',
        'HU': '+36',
        'BG': '+359',
        'HR': '+385',
        'RS': '+381',
        'SK': '+421',
        'SI': '+386',
        'EE': '+372',
        'LV': '+371',
        'LT': '+370',
        'CY': '+357',
        'MT': '+356',
        'LU': '+352',
        'IE': '+353',
        'IS': '+354',
        'AL': '+355',
        'MC': '+377',
        'SM': '+378',
        'VA': '+379',
        'UA': '+380',
        'BY': '+375',
        'MD': '+373',
        'AM': '+374',
        'RU': '+7',
        'KZ': '+7',
        'JP': '+81',
        'KR': '+82',
        'CN': '+86',
        'IN': '+91',
        'PK': '+92',
        'AF': '+93',
        'LK': '+94',
        'MM': '+95',
        'TH': '+66',
        'VN': '+84',
        'ID': '+62',
        'MY': '+60',
        'PH': '+63',
        'SG': '+65',
        'AU': '+61',
        'NZ': '+64',
        'CA': '+1',
        'MX': '+52',
        'BR': '+55',
        'AR': '+54',
        'CL': '+56',
        'CO': '+57',
        'PE': '+51',
        'VE': '+58',
        // Add more country codes as needed
      };

      // Phone number format patterns
      const phoneFormats = {
        'US': '(XXX) XXX-XXXX',
        'GB': 'XXXX XXXXXX',
        'DE': 'XXXX XXXXXXX',
        // Add more format patterns as needed
        'default': 'XXXXXXXXXX'
      };

      function updatePhoneFormat(countryCode) {
        const format = phoneFormats[countryCode] || phoneFormats['default'];
        phoneInput.placeholder = format.replace(/X/g, '0');
        phoneCountryCode.textContent = countryCodes[countryCode] || '+1';
      }

      // Update phone format when billing country changes
      const billingCountrySelect = document.querySelector('[name="company[billing_address_attributes][country]"]');
      if (billingCountrySelect) {
        billingCountrySelect.addEventListener('change', (e) => {
          updatePhoneFormat(e.target.value);
        });

        // Set initial format based on selected country
        if (billingCountrySelect.value) {
          updatePhoneFormat(billingCountrySelect.value);
        }
      }

      // Check if addresses are the same on page load
      function checkIfAddressesAreSame() {
        let areSame = true;
        billingFields.forEach((field, index) => {
          if (field.value !== shippingFields[index].value) {
            areSame = false;
          }
        });
        sameAsBillingCheckbox.checked = areSame;
        if (areSame) {
          shippingAddress.classList.add('opacity-50');
        }
      }

      function copyBillingToShipping() {
        if (sameAsBillingCheckbox.checked) {
          billingFields.forEach((field, index) => {
            shippingFields[index].value = field.value;
          });
          shippingAddress.classList.add('opacity-50');
        } else {
          shippingAddress.classList.remove('opacity-50');
        }
      }

      // Initialize on page load
      checkIfAddressesAreSame();

      sameAsBillingCheckbox.addEventListener('change', copyBillingToShipping);

      // Sync shipping with billing when checkbox is checked and billing changes
      billingFields.forEach(field => {
        field.addEventListener('input', () => {
          if (sameAsBillingCheckbox.checked) {
            copyBillingToShipping();
          }
        });
      });

      // When shipping fields change, uncheck the box if they don't match billing
      shippingFields.forEach((field, index) => {
        field.addEventListener('input', () => {
          if (sameAsBillingCheckbox.checked && field.value !== billingFields[index].value) {
            sameAsBillingCheckbox.checked = false;
            shippingAddress.classList.remove('opacity-50');
          }
        });
      });
    });
  <% end %>
<% end %> 